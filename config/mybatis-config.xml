<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
 PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 1. mybatis可以使用 properties 标签来引入外部的资源文件 resource：引入类路径下的资源文件 url：引入网路或者磁盘下的资源文件 -->
	<properties resource="db.properties"></properties>

	<!-- 2. settings 标签包含了很多重要的mybatis运行信息 setting：表示每一个设置项 name：设置名 value:设置项的取值 -->
	<settings>
		<!-- 开启驼峰命名自动匹配：如果数据库的字段名为emp_name, javaBean 的对应属性名为empName，那么无需设置别名，mybatis会自动映射 -->
		<setting name="mapUnderscoreToCamelCase" value="true" />
		<!-- 开启懒加载模式 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<setting name="aggressiveLazyLoading" value="false"/>
		<!-- 开启全局缓存 -->
		<setting name="cacheEnabled" value="true"/>
	</settings>

	<!-- 3. typeAliases:别名处理器，可以为我们的java类型起别名 别名不区分大小写,一般不建议使用 -->
	<typeAliases>
		<!-- typeAlias:为某个javaBean类型起别名 type：类的全路径名 alias：指定新的别名（如果不写默认就是类名的首字母小写） -->
		<!-- <typeAlias type="com.zc.cris.mybatis.bean.Employee" alias="emp"/> -->

		<!-- package：为某个包下的所有类批量起别名 name：指定包名（为当前包和其子包下的每个类都起一个默认的别名，即类名首字母小写） -->
		<package name="com.zc.cris.mybatis.bean" />
		<!-- 批量起别名的情况下，使用@Alias 注解为某个指定的类型起新的别名 -->
	</typeAliases>

	<!-- 4. environments: mybatis可以配置多种环境，default可以指定使用某种环境，以便达到快速切换环境的目的 environment：代表具体的mybatis运行环境，id表示当前环境的唯一标示，用于上面的default属性值，且该标签必须使用两个子标签 
		transactionManager：事务管理器 type：事务管理器的类型，一般使用 JDBC dataSource：数据源 type：数据源类型，一般使用 
		POOLED -->
	
	<environments default="dev_mysql">
		<environment id="dev_oracle">
			<transactionManager type="JDBC"></transactionManager>
			<dataSource type="POOLED">
				<property name="driver" value="${orcl.driver}" />
				<property name="url" value="${orcl.url}" />
				<property name="username" value="${orcl.username}" />
				<property name="password" value="${orcl.password}" />
			</dataSource>
		</environment>

		<environment id="dev_mysql">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>

	<!-- 5. databaseIdProvider:支持多数据库厂商 type："DB_VENDOR",默认即可 作用就是得到不同数据库的标识：MySQL,Oracle，SQL 
		Server ... -->
	<databaseIdProvider type="DB_VENDOR">
		<!-- 如果对数据库厂商的标识不喜欢，可以自己起别名 -->
		<property name="MySQL" value="mysql" />
		<property name="Oracle" value="oracle" />
		<property name="SQL Server" value="sqlserver" />
	</databaseIdProvider>
	
	<!-- 将我们写好的sql映射文件（EmployeeMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中 -->
	<!-- 
		6. mappers:将sql 映射注册到全局配置中
	 -->
	<mappers>
		<!-- 
			mapper:注册一个sql 映射
				注册配置文件：
					resource：引用类路径下的sql 映射文件
					url：引用网路 或者磁盘下的sql映射文件
					
				注册接口（一般不用）：
					1. sql映射文件必须和接口同名，且和接口放在同一路径下
					
		 -->
		 
		<!-- <mapper resource="mybatis/mapper/EmployeeMapper.xml" /> -->
		<!-- 批量注册：为了方便，引入mapper文件都使用批量注册的方式，可以通过在config 这个source folder包
			下面新建一个package，并和我们的mappler接口所在包同名即可
		 -->
		<package name="com.zc.cris.mybatis.dao"/>
	</mappers>
</configuration>